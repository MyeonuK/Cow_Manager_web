LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.STD_LOGIC_UNSIGNED.ALL;

--
--Clcd entity 선언
-- 
ENTITY HELLO IS
PORT(
    LCD_RESETN : IN STD_LOGIC;
    LCD_CLK : IN STD_LOGIC;
    LCD_E : OUT STD_LOGIC;
    LCD_RS : OUT STD_LOGIC;
    LCD_RW : OUT STD_LOGIC;
    LCD_DATA : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);

    SEG_SEL : IN STD_LOGIC_VECTOR(2 DOWNTO 0);
    SEG_DIN : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
    SEG_COM : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
    SEG_DATA : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);

    LED_CLK : IN STD_LOGIC;
    LED : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);

    SW_RESETN : IN STD_LOGIC;
    SW_SWITCH : IN STD_LOGIC_VECTOR(11 DOWNTO 0);
    SW_SEG : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
);
END HELLO;

ARCHITECTURE BYEBYE OF HELLO IS
COMPONENT LCD IS
PORT(
    RESETN : IN STD_LOGIC;
    CLK : IN STD_LOGIC;
    LCD_E : OUT STD_LOGIC;
    LCD_RS : OUT STD_LOGIC;
    LCD_RW : OUT STD_LOGIC;
    LCD_DATA : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
);
END COMPONENT;

COMPONENT 8SEG IS
PORT(
    SEL : IN STD_LOGIC_VECTOR(2 DOWNTO 0);
    DIN : IN STD_LOGIC_VECTOR(3 DOWNTO 0);
    SEG_COM : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
    SEG_DATA : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
);
END COMPONENT;

COMPONENT LED IS
PORT(
    CLK : IN STD_LOGIC;
    LED : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
);
END COMPONENT;

COMPONENT SWITCH IS
PORT(
    RESETN : IN STD_LOGIC;
    SWITCH : IN STD_LOGIC_VECTOR(11 DOWNTO 0);
    SEG : OUT STD_LOGIC_VECTOR(7 DOWNTO 0);
);
END COMPONENT;

TYPE STATE IS (DELAY, FUNCTION_SET, ENTRY_MODE, DISP_ONOFF, LINE1, LINE2, DELAY_T, CLEAR_DISP);
SIGNAL LCD_STATE : STATE;
SIGNAL CNT : INTEGER RANGE 0 TO 2048 = 0;

SIGNAL DATA_A : STD_LOGIC_VECTOR(7 DOWNTO 0);
SIGNAL DATA_B : STD_LOGIC_VECTOR(7 DOWNTO 0);
SIGNAL DATA_C : STD_LOGIC_VECTOR(7 DOWNTO 0);
SIGNAL DATA_D : STD_LOGIC_VECTOR(7 DOWNTO 0);
SIGNAL DATA_E : STD_LOGIC_VECTOR(7 DOWNTO 0);
SIGNAL DATA_F : STD_LOGIC_VECTOR(7 DOWNTO 0);
SIGNAL DATA_G : STD_LOGIC_VECTOR(7 DOWNTO 0);
SIGNAL DATA_H : STD_LOGIC_VECTOR(7 DOWNTO 0);
SIGNAL DATA_I : STD_LOGIC_VECTOR(7 DOWNTO 0);
SIGNAL DATA_J : STD_LOGIC_VECTOR(7 DOWNTO 0);

SIGNAL L_CLK : STD_LOGIC := '0';
SIGNAL L_CNT : INTEGER RANGE 0 TO 7;

SIGNAL DATA_0 : STD_LOGIC_VECTOR(7 DOWNTO O);

SIGNAL BOMB : INTEGER RANGE 1 TO 8;


BEGIN

SW_SEG <= "00000001" WHEN SW_SWITCH = X"800" ELSE
            "00000010" WHEN SW_SWITCH = X"400" ELSE
            "00000011" WHEN SW_SWITCH = X"200" ELSE;

LCD_STATE <= DELAY WHEN SW_SWITCH = X"800 OR SW_SWITCH = X"400" OR SW_SWITCH = X"200";
--
-- LCD SET
--
PROCESS(LCD_RESETN, LCD_CLK)
BEGIN
    IF LCD_RESETN = '1' THEN
        LCD_STATE <= DELAY;
    ELSIF LCD_CLK'EVENT AND LCD_CLK = '1' THEN 
        CASE LCD_STATE IS
            WHEN DELAY =>
                IF CNT = 70 THEN    
                    LCD_STATE <= FUNCTION_SET;
                END IF;
            WHEN FUNCTION_SET =>
                IF CNT = 30 THEN
                    LCD_STATE <= DISP_ONOFF;
                END IF;
            WHEN DISP_ONOFF =>
                IF CNT = 30 THEN
                    LCD_STATE <= ENTRY_MODE;
                END IF;
            WHEN ENTRY_MODE =>
                IF CNT = 30 THEN
                    LCD_STATE <= LINE1;
                END IF;
            WHEN LINE1 =>
                IF CNT = 20 THEN
                    LCD_STATE <= LINE2;
                ENF IF;
            WHEN LINE2 =>
                IF CNT = 20 THEN   
                    LCD_STATE <= WAIT;
                END IF;
            WHEN WAIT =>
        END CASE;
    END IF;
END PROCESS;


--
--  LCD WORK
--
PROCESS(LCD_RESETN, LCD_CLK)
BEGIN
    IF LCD_RESETN = '1' THEN
        CNT <= 0;
    ELSIF LCD_CLK'EVENT AND CLK = '1' THEN
        IF SW_SEG = "00000001" OR SW_SEG = "00000010" THEN
            CASE LCD_STATE IS
                WHEN DELAY =>
                    IF CNT = 70 THEN
                        CNT <= 0;
                    ELSE
                        CNT <= CNT + 1;
                    END IF;
                WHEN FUNCTION_SET =>
                    IF CNT = 30 THEN
                        CNT <= 0;
                    ELSE
                        CNT <= CNT + 1;
                    END IF;
                WHEN DISP_ONOFF =>
                    IF CNT = 30 THEN
                        CNT <= 0;
                    ELSE
                        CNT <= CNT + 1;
                    END IF;
                WHEN ENTRY_MODE =>
                    IF CNT = 30 THEN
                        CNT <= 0;
                    ELSE
                        CNT <= CNT + 1;
                    END IF;
                WHEN LINE1 =>
                    IF CNT = 20 THEN
                        CNT <= 0;
                    ELSE
                        CNT <= CNT + 1;
                    END IF;
                WHEN LINE2 =>
                    IF CNT = 20 THEN
                        CNT <= 0;
                    ELSE
                        CNT <= CNT + 1;
                    END IF;
                WHEN WAIT =>
            END CASE;
        ELSE IF SW_SEG = "00000011" THEN
        END IF;
    END IF;
END PROCESS;

--
-- LCD CHARACTER
--
PROCESS(LCD_RESETN, LCD_CLK)
BEGIN
    IF LCD_RESETN = '1' THEN    
        LCD_RS <= '1';
        LCD_RS <= '1';
        LCD_DATA <= "00000000";
    ELSIF LCD_CLK'EVENT AND LCD_CLK = '1' THEN
        CASE LCD_STATE IS
            WHEN DELAY =>
            WHEN FUNCTION_SET =>
                LCD_RS <= '0';
                LCD_RW <= '0';
                LCD_DATA <= "00111100";
            WHEN DISP_ONOFF =>
                LCD_RS <= '0';
                LCD_RW <= '0';
                LCD_DATA <= "00001100";
            WHEN ENTRY_MODE =>
                LCD_RS <= '0';
                LCD_RW <= '0';
                LCD_DATA <= "00000110";
            WHEN CLEAR_DISP =>
                LCD_RS <= '0';
                LCD_RW <= '0';
                LCD_DATA <= "00000001";
            WHEN DELAY_T =>
                LCD_RS <= '0';
                LCD_RW <= '0';
                LCD_DATA <= "00000010";
            WHEN LINE1 =>
                LCD_RW <= '0’;
                IF SW_SEG = "00000001" THEN
                    CASE CNT IS
                        WHEN 0 =>
                            LCD_RS <= '0';
                            LCD_DATA <= "10000000";
                        WHEN 1, 2, 3, 4, 5, 12, 13, 14, 15, 16 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00100000"; -- 
                        WHEN 6 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00110001"; -- 1
                        WHEN 7 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00111000"; -- 8
                        WHEN 8 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00110010"; -- 2
                        WHEN 9 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00110101"; -- 5
                        WHEN 10 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00111001"; -- 9
                        WHEN 11 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00110100"; -- 4
                        WHEN OTHERS =>
                    END CASE;
                ELSIF SW_SEG = "00000010" THEN
                    CASE CNT IS
                        WHEN 0 =>
                            LCD_RS <= '0';
                            LCD_DATA <= "10000000";
                        WHEN 1, 2, 7, 15, 16 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00100000"; -- 
                        WHEN 3 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01000010"; -- B
                        WHEN 4 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00111111"; -- O
                        WHEN 5 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01001101"; -- M
                        WHEN 6 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01000010"; -- B
                        WHEN 8 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01000011"; -- C
                        WHEN 9 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00111111"; -- O
                        WHEN 10 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01010101"; -- U
                        WHEN 11 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00111110"; -- N
                        WHEN 12 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01010100"; -- T
                        WHEN 13 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01000101"; -- E
                        WHEN 14 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01010010"; --  R       
                        WHEN OTHERS =>
                    END CASE;
                ELSIF SW_SEG = "00000011" THEN
                    CASE CNT IS
                        WHEN 0 =>
                            LCD_RS <= '0';
                            LCD_DATA <= "11000000";
                        WHEN 1, 2, 3, 4, 12, 13, 14, 15, 16 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00100000"; -- 
                        WHEN 5 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01000010"; -- B
                        WHEN 6 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01101111"; -- o
                        WHEN 7 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01101101"; -- m
                        WHEN 8 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01100010"; -- b
                        WHEN 9 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00101000"; -- (
                        WHEN 10 =>
                            LCD_RS <= '1';
                            CASE BOMB IS
                                WHEN 1 => LCD_DATA <= "00110001"; -- 1
                                WHEN 2 => LCD_DATA <= "00110010"; -- 2 
                                WHEN 3 => LCD_DATA <= "00110011"; -- 3 
                                WHEN 4 => LCD_DATA <= "00110100"; -- 4 
                                WHEN 5 => LCD_DATA <= "00110101"; -- 5 
                                WHEN 6 => LCD_DATA <= "00110110"; -- 6 
                                WHEN 7 => LCD_DATA <= "00110111"; -- 7 
                                WHEN 8 => LCD_DATA <= "00111000"; -- 8 
                        WHEN 11 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00101001"; -- )
                        WHEN OTHERS =>
                    END CASE;
                ENDIF;
            WHEN LINE2 =>
                LCD_RW <= '0';
                IF SW_SEG = "00000001" THEN
                    CASE CNT IS
                        WHEN 0 =>
                            LCD_RS <= '0';
                            LCD_DATA <= "11000000";
                        WHEN 1, 2, 3, 4, 5, 12, 13, 14, 15, 16 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00100000"; -- 
                        WHEN 6 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01001010"; -- J
                        WHEN 7 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01101001"; -- i
                        WHEN 8 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01111001"; -- y
                        WHEN 9 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01100101"; -- e
                        WHEN 10 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01101111"; -- o
                        WHEN 11 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01101110"; -- n
                        WHEN OTHERS =>
                    END CASE;
                ELSIF SW_SEG = "00000010" THEN
                    CASE CNT IS
                        WHEN 0 =>
                            LCD_RS <= '0';
                            LCD_DATA <= "11000000";
                        WHEN 1, 2, 3, 4, 5, 12, 13, 14, 15, 16 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00100000"; -- 
                        WHEN 6 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01010011"; -- S
                        WHEN 7 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01010100"; -- T
                        WHEN 8 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01000001"; -- A
                        WHEN 9 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01010010"; -- R
                        WHEN 10 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01010100"; -- T
                        WHEN 11 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00100001"; -- !
                        WHEN OTHERS =>
                    END CASE;
                ELSIF SW_SEG = "00000011" THEN
                    CASE CNT IS
                        WHEN 0 =>
                            LCD_RS <= '0';
                            LCD_DATA <= "11000000";
                        WHEN 1, 2, 3, 13, 14, 15, 16 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00100000"; -- 
                        WHEN 4 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01000101"; -- E
                        WHEN 5 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01111000"; -- x
                        WHEN 6 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01110000"; -- p
                        WHEN 7 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01111100"; -- l
                        WHEN 8 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01001111"; -- o
                        WHEN 9 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01100100"; -- d
                        WHEN 10 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01100101"; -- e
                        WHEN 11 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "01100100"; -- d
                        WHEN 12 =>
                            LCD_RS <= '1';
                            LCD_DATA <= "00100001"; -- !
                        WHEN OTHERS =>
                    END CASE;
                ENDIF;
        END CASE;
    END IF;
    LCD_E <= LCD_CLK;
END PROCESS;

--
-- LED TIME COUNT
--
PROCESS(LED_CLK)
VARIABLE LED_CNT : INTEGER RANGE 0 TO 999;
VARIABLE D_CLK : STD_LOGIC;

BEGIN
    IF LED_CLK'EVENT AND LED_CLK = '1' THEN
        IF L_CNT = 499 THEN
            L_CNT := 0;
            D_CLK := NOT D_CLK;
        ELSE
            L_CNT := L_CNT + 1;
            D_CLK := D_CLK;
        END IF;
        L_CLK <= D_CLK;
    END IF;
END PROCESS;

--
-- LED DIGIT COUNT
--
PROCESS(L_CLK)
BEGIN 
    IF L_CLK'EVENT AND L_CLK = '1' THEN
        IF SW_SEG = "00000010" THEN
            IF L_CNT = 7 THEN
                L_CNT <= 0;
            ELSE
                L_CNT <= L_CNT + 1;
            END IF;
            BOMB <= L_CNT + 1;
    END IF;
END PROCESS;


--
-- LED + 7SEG CONTROL
--
PROCESS(L_CLK)
BEGIN
    IF L_CLK'EVENT AND L'CLK = '1' THEN 
        IF LED = "00000000" THEN
            CASE L_CNT IS 
                WHEN 0 => 
                    LED <= "10000000";
                    SEG_COM <= "011111111"
                WHEN 1 =>
                    LED <= "01000000";
                    SEG_COM <= "10111111";
                WHEN 2 => 
                    LED <= "00100000";
                    SEG_COM <= "110111111"
                WHEN 3 => 
                    LED <= "00010000";
                    SEG_COM <= "11101111"
                WHEN 4 => 
                    LED <= "00001000";
                    SEG_COM <= "11110111"
                WHEN 5 => 
                    LED <= "00000100";
                    SEG_COM <= "11111011"
                WHEN 6 => 
                    LED <= "00000010";
                    SEG_COM <= "11111101"
                WHEN 7 => 
                    LED <= "00000001";
                    SEG_COM <= "11111110"
                WHEN OTERS => 
                    LED <= "00000000";
                    SEG_COM <= "11111111";
            END CASE;
        ELSE
            LED <= "00000000";
            SEG_COM <= "11111111";
        END IF;
END PROCESS;

--
-- 7SEG
--
SEG_DATA <= "11111100";













U1 : LCD PORT MAP(
    RESETN => LCD_RESETN,
    CLK => LCD_CLK,
    LCD_E => LCD_E,
    LCD_RS => LCD_RS,
    LCD_RW => LCD_RW,
    LCD_DATA => LCD_DATA
);
U2 : 8SEG PORT MAP(
    SEL => SEG_SEL,
    DIN => SEG_DIN,
    SEG_COM => SEG_COM,
    SEG_DATA => SEG_DATA
);
U3 : LED PORT MAP(
    CLK => LED_CLK,
    LED => LED
);
U4 : SWITCH PORT MAP(
    RESETN => SW_RESETN,
    SWITCH => SW_SWITCH,
    SEG => SW_SEG
);

END BYEBYE;